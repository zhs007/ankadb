syntax = "proto3";

package ankadbpb;

message SnapshotMgr {
    int64 maxSnapshotID = 1;
    repeated int64 snapshots = 2;
}

message Snapshot {
    int64 snapshotID = 1;
    repeated string keys = 2;
    int64 createTime = 3;
}

// graphQL请求
// graphQL query
message Query {
    string queryData = 1;
    string varData = 2;
    // 如果queryTemplateName不为空，表示会更新queryTemplate
    // 注意，queryTemplateName要唯一
    // 也可以只给queryTemplateName，不给queryData
    // 如果同时给queryData和queryTemplateName，效率会低于只传queryTemplateName
    // If the queryTemplateName is not empty, it means that the queryTemplate will be updated.
    // Note the queryTemplateName is unique
    // can also only give queryTemplateName, not to queryData
    // If you give queryData and queryTemplateName at the same time, 
    // the efficiency will be lower than only the queryTemplateName    
    string queryTemplateName = 3;
}

// graphQL请求的返回
// reply of graphQL query
message ReplyQuery {
    string err = 1;
    string result = 2;
}

// 设置graphQL请求模板
// set graphQL query template
message QueryTemplate {
    // 注意，queryTemplateName要唯一
    // Note the queryTemplateName is unique
    string queryTemplateName = 1;
    string queryData = 2;
}

// 设置graphQL请求模板的返回
// reply of QueryTemplate
message ReplyQueryTemplate {
    string err = 1;
}

// key-value的get请求
// get value in key-value
message GetValue {
    string nameDB = 1;
    string key = 2;
}

// key-value的get请求的返回
// reply of get value in key-value
message ReplyGetValue {
    string err = 1;
    bytes value = 2;
}

// key-value的set请求
// set value in key-value
message SetValue {
    string nameDB = 1;
    string key = 2;
    bytes value = 3;
}

// key-value的set请求的返回
// reply of set value in key-value
message ReplySetValue {
    string err = 1;
}

service AnkaDBServ {
    //----------------------------------------------------------------------------
    // graphQL

    // query in graphQL
    rpc query (Query) returns (ReplyQuery) {}
    // query in graphQL
    rpc setQueryTemplate (QueryTemplate) returns (ReplyQueryTemplate) {}

    //----------------------------------------------------------------------------
    // key-value

    // get
    rpc get (GetValue) returns (ReplyGetValue) {}
    // set
    rpc set (SetValue) returns (ReplySetValue) {}
}